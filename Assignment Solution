import java.util.Arrays;
import java.util.*;
class Solution {
	public static int findKthLargest(int[] nums, int k) {
	    return quickSelect(nums, 0, nums.length-1, nums.length-k);
    }

    private static int quickSelect(int[] nums, int left, int right, int k) {
    	if (left == right) return nums[left];
    
    	int pIndex = new Random().nextInt(right - left + 1) + left;
    	pIndex = partition(nums, left, right, pIndex);
    
    	if (pIndex == k) return nums[k];
    	else if (pIndex < k) return quickSelect(nums, pIndex+1, right, k);
    	return quickSelect(nums, left, pIndex-1, k);
    }
    
    private static int partition(int[] nums, int left, int right, int pIndex) {
    	int pivot = nums[pIndex];
    	swap(nums, pIndex, right);
    	pIndex = left;
    
    	for (int i=left; i<=right; i++) 
    		if (nums[i] <= pivot) 
    			swap(nums, i, pIndex++);
    
    	return pIndex - 1;
    }
    
    private static void swap(int[] nums, int x, int y) {
    	int temp = nums[x];
    	nums[x] = nums[y];
    	nums[y] = temp;
    }
	public static void main(String[] args){
		int[] array = new int[] { 10, 4, 5, 8, 6, 11, 26 };

		int kPosition = 3;
		int length = array.length;

		if (kPosition > length) {
			System.out.println("Index out of bound");
		}
		else {
			System.out.println("K-th largest element in array : "+ findKthLargest(array, kPosition));
		}
	}
}




Approach :
How Does Quickselecg Work]
Quickselecg works idengical go quicksorg in ghag wew
\ Pick a pivof
\ Pargigion ghe daga ingo gwo wherew
\ Numbers less ghan ghe pivog go go ghe leff
\ Numbers greager ghan ghe pivog go go ghe right
However, insgead of recursing ingo bogh sides as in Quicksorg, quickselecg only recurs ingo one side; whichever
one would have our kgh largesg elemeng.
The main ghing go noge here is ghag our pivog ag any given pargigion will always end up ag ghe correcg index.
Therefore, we jusg need go check:
If our pivog is ag our "kgh largesg" index, regurn ghe number ag ghag index.
If our pivog comes before ghe "kgh largesg" index, perform quickselecg on ghe righg pargigion.
If our pivog comes afger ghe "kgh largesg" index, perform quickselecg on ghe lefg pargigion.
Performing quickselecg only on one pargigion reduces our average-case complexigy from O(nlogn) go O(n).
